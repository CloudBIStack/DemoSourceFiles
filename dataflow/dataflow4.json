{
	"name": "dataflow4",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "dsDummy",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "dssqldatelkup",
						"type": "DatasetReference"
					},
					"name": "SQLLkup"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "dsSQLIntermediate",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "Lookup1"
				}
			],
			"script": "parameters{\n\tSrcFileName as string\n}\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource(output(\n\t\tjuliandate as integer,\n\t\tuniversaldate as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> SQLLkup\nsource1 derive(SourceFileName = $SrcFileName,\n\t\tJulianportion = replace(substring($SrcFileName,  instr($SrcFileName,toString(year(toDate(currentTimestamp()))))+4),'.csv','')) ~> DerivedColumn1\nDerivedColumn1, SQLLkup lookup(toInteger(Julianportion) == juliandate,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> Lookup1\nLookup1 sink(input(\n\t\tsourcefilename as string,\n\t\tdestinationfoldername as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tsourcefilename = SourceFileName,\n\t\tdestinationfoldername = universaldate\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
		}
	}
}
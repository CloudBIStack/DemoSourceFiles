{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Json1",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "Json1",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DelimitedText2",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "flatten1"
				},
				{
					"name": "aggregate1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Header as (DateTime as timestamp, Id as string),",
				"          Qualification as (Grade as string, HighestQualification as string, TotalYearsofStudy as short, University as (Location as string, NameofUniv as string), {Year of Passing} as short),",
				"          Work as (ExperienceYears as short, Industry as string, JobType as string, PersonalMailID as string)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'arrayOfDocuments') ~> source1",
				"source(output(",
				"          Header as (Id as string, DateTime as string),",
				"          Qualification as (HighestQualification as string, {Year of Passing} as string, Grade as string, TotalYearsofStudy as string),",
				"          Work as (Industry as string, JobType as string, ExperienceYears as string, PersonalMailID as string)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'singleDocument') ~> source2",
				"aggregate1 foldDown(unroll(header),",
				"     mapColumn(",
				"          Id = header.Header.Id,",
				"          DateTime = header.Header.DateTime,",
				"          Grade = header.Qualification.Grade,",
				"          HighestQualification = header.Qualification.HighestQualification,",
				"          TotalYearsofStudy = header.Qualification.TotalYearsofStudy,",
				"          NameofUniv = header.Qualification.University.NameofUniv,",
				"          Location = header.Qualification.University.Location,",
				"          Header = header.Qualification.{Year of Passing},",
				"          ExperienceYears = header.Work.ExperienceYears,",
				"          Industry = header.Work.Industry,",
				"          JobType = header.Work.JobType,",
				"          PersonalMailID = header.Work.PersonalMailID",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten1",
				"source1 aggregate(header = collect(@(Header=Header,Qualification=Qualification,Work=Work))) ~> aggregate1",
				"flatten1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}